name: Terragrunt Workflow

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select the environment to deploy'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
      apply_this_plan:
        description: 'Do you want to apply this plan?'
        required: false
        type: boolean

env:
  SSH_PRIVATE_KEY: |
    -----BEGIN OPENSSH PRIVATE KEY-----
    b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAAAMwAAAAtzc2gtZW
    QyNTUxOQAAACC4xBxFxDyzkLB7B8jfLXLjglWpe/Tei3MuX5TWKXzHfwAAAJjmMzpp5jM6
    aQAAAAtzc2gtZWQyNTUxOQAAACC4xBxFxDyzkLB7B8jfLXLjglWpe/Tei3MuX5TWKXzHfw
    AAAEDFaaxioJGCklqnNjqTNFsAvWPLz/7jMQUr7gGWP5C1dbjEHEXEPLOQsHsHyN8tcuOC
    Val79N6Lcy5flNYpfMd/AAAAEGlicmFpbS5yQG1haWwucnUBAgMEBQ==
    -----END OPENSSH PRIVATE KEY-----

jobs:
  terragrunt:
    permissions: write-all
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ github.event.inputs.environment }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name : Ssh config 
        uses: webfactory/ssh-agent@v0.7.0
        with:
            ssh-private-key: ${{ env.SSH_PRIVATE_KEY }}


      - name: Configure AWS Credentials 1
        id: creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::981864830773:role/actions-rolee
          role-session-name: taurus
          output-credentials: true
      - name: get caller identity 1
        run: |
          aws sts get-caller-identity
      

      - name: Setup Terraform v1.5.7
        uses: hashicorp/setup-Terraform@v1
        with:
          terraform_version: 1.5.7
          terraform_wrapper: true

      - name: Setup Terragrunt v0.38.4
        run: |
          sudo wget -q -O /bin/terragrunt "https://github.com/gruntwork-io/terragrunt/releases/download/v0.50.14/terragrunt_linux_amd64"
          sudo chmod +x /bin/terragrunt
          terragrunt -v

      - name: Initialize Terragrunt
        run: |
          terragrunt init

      - name: Terragrunt Plan
        id: plan
        run: |
          terragrunt plan -out=tfplan

      - name: Terragrunt Apply 
        if:  github.event.inputs.apply_this_plan  == 'true'
        run: |
          terragrunt apply -auto-approve tfplan

      - name: Terragrunt Apply Not
        if:  github.event.inputs.apply_this_plan  == 'false'
        run: |
          echo "COMPLETE! THIS PLAN WAN NOT APPLY. IF YOU WANT TO APPLY THIS PLAN RERUN WORKFLOW WITH APPLY SETTING"