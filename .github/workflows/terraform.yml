name: Terragrunt Workflow

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select the environment to deploy'
        required: true
        default: 'dev'
        options:
          dev: 'Dev'
          stage: 'Stage'
          prod: 'Prod'

jobs:
  terragrunt:
    runs-on: ubuntu-latest
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    # Install the latest version of Terragrunt CLI and configure the Terragrunt CLI configuration file with a Terragrunt Cloud user API token
    - name: Setup Terraform v1.2.6
      uses: hashicorp/setup-Terraform@v1
      with:
        terraform_version: 1.2.6
        terraform_wrapper: true
    - name: Setup Terraform version
      run: terraform --version
    - name: Setup Terraform wrapper path
      run: which terraform

    - name: Setup Terragrunt v0.38.4
      run: |
        sudo wget -q -O /bin/terragrunt "https://github.com/gruntwork-io/terragrunt/releases/download/v0.38.4/terragrunt_linux_amd64"
        sudo chmod +x /bin/terragrunt
        terragrunt -v


      - name: Initialize Terragrunt
        run: |
          terragrunt init
        working-directory: ${{ github.event.inputs.environment }}

      - name: Terragrunt Plan
        id: plan
        run: |
          terragrunt plan -out=tfplan
        working-directory: ${{ github.event.inputs.environment }}

      - name: Request Approval
        id: approval
        run: echo "Requesting approval for Terraform changes in ${{ github.event.inputs.environment }}"
      
      - name: Wait for Approval
        if: steps.approval.outcome == 'success'
        run: |
          echo "Waiting for approval..."
          sleep 30  # Adjust the sleep duration as needed
      
      - name: Terragrunt Apply
        if: steps.approval.outcome == 'success'
        run: |
          terragrunt apply -auto-approve tfplan
        working-directory: ${{ github.event.inputs.environment }}
